<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script
      src="https://cdn.socket.io/4.7.5/socket.io.min.js"
      integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO"
      crossorigin="anonymous"
    ></script>
 
  </head>
  <body>
    <!-- <button class="connect" style="padding: 6px; 
    background-color: blue;
    color: white;
    border-radius: 8px;
    cursor: pointer;">Connect to server</button>
    <button class="disconnect" style="padding: 6px; 
    background-color: red;
    color: white;
    border-radius: 8px;
    cursor: pointer;">Disconnect from server</button> -->

   <input style="padding: 8px;
                border-radius: 8px;
                " class="input" type="text">
  </body>
  <script>
    // 1. setting connection between client and server
    // io() // sirf ye likhne se connection naam ka event automatically backend p jayega

    // 2. sending cutsom event from client to server
    // var socket = io()
    // socket.emit("abcd") // socket abcd event backend ko bej raha h

    // 3. sending data with custom event
    // var socket = io()
    // socket.emit("abcd", 12)

    // 4. sending response from server
    // var socket = io()
    // socket.emit("abcd")
    // socket.on("defg", (data) => {
    //     console.log(data)
    // })

    // 5. broadcasting event, matlab mere bger sbko dikhe
    // var socket = io()
    // socket.emit("typing")
    // socket.on("typing", (data) => {
    //     console.log(data)
    // })

    // 6. Handling connections and disconnections using buttons
    // var connectBtn = document.querySelector('.connect')
    // var disconnectBtn = document.querySelector('.disconnect')
    // var socket;
    // connectBtn.addEventListener("click", (e) => {
    //     socket = io()
    // })
    // disconnectBtn.addEventListener("click", (e) => {
    //     socket.disconnect()
    // })

    // 7. showing 'someone is typing' to others while im typing
    var socket = io()
    var inp = document.querySelector('.input')
    inp.addEventListener('input', (e) => {
        socket.emit("typing", e.target.value)
    })
    socket.on("typing", (data) => {
        console.log(data)
    })
</script>
</html>
